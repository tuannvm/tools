---
- include: ssh.yml

- name: add neovim ppa
  apt_repository:
    repo: ppa:neovim-ppa/stable

- name: Install os dependancies
  apt:
    name: "{{ apt_packages }}"
    update_cache: yes
    state: latest
    autoremove: yes
    autoclean: yes
  become: yes

- include: nginx.yml

- stat:
    path: "~/.pyenv/shims/python"
  register: pyenv_path

- name: Install pyenv
  shell: curl https://pyenv.run | bash
  when: pyenv_path.stat.exists == False

- name: Install pip packages
  pip:
    name: "{{ pip_packages }}"
    state: latest

- stat:
    path: "~/.cache/dein/"
  register: dein_path

- name: Download dein installer script
  get_url:
    url: https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh
    dest: installer.sh
    mode: 0755
  when: dein_path.stat.exists == False

- shell: bash ~/installer.sh ~/.cache/dein
  when: dein_path.stat.exists == False


- name: install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin/
    mode: 0755
  become: yes

- name: install helm
  block:
    - name: download helm
      get_url:
        url: https://storage.googleapis.com/kubernetes-helm/{{ helm_tgz }}
        dest: /tmp/
    - name: unarchive
      unarchive:
        copy: no
        src: /tmp/{{helm_tgz}}
        dest: /tmp
    - name: copy to bin
      copy:
        remote_src: yes
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin
        mode: 0755
      become: yes
  always:
    - name: cleanup...
      file:
        path: /tmp/linux-amd64
        state: absent

- name: install vault
  block:
    - name: download vault
      get_url:
        url: https://releases.hashicorp.com/vault/{{ vault_version }}/{{ vault_tgz }}
        dest: /tmp/
    - name: unarchive
      unarchive:
        copy: no
        src: /tmp/{{ vault_tgz }}
        dest: /tmp
    - name: copy to bin
      copy:
        remote_src: yes
        src: /tmp/vault
        dest: /usr/local/bin
        mode: 0755
      become: yes
  always:
    - name: cleanup...
      file:
        path: /tmp/{{ vault_tgz }}
        state: absent

- name: install terraform
  block:
    - name: download terraform
      get_url:
        url: https://releases.hashicorp.com/terraform/{{ terraform_version }}/{{ terraform_tgz }}
        dest: /tmp/
    - name: unarchive
      unarchive:
        copy: no
        src: /tmp/{{ terraform_tgz }}
        dest: /tmp
    - name: copy to bin
      copy:
        remote_src: yes
        src: /tmp/terraform
        dest: /usr/local/bin
        mode: 0755
      become: yes
  always:
    - name: cleanup...
      file:
        path: /tmp/{{ vault_tgz }}
        state: absent

- name: install dep
  block:
    - name: download dep
      get_url:
        url: https://github.com/golang/dep/releases/download/{{dep_version}}/dep-linux-amd64
        dest: /tmp/dep-linux-amd64
    - name: copy to bin
      copy:
        remote_src: yes
        src: /tmp/dep-linux-amd64
        dest: /usr/local/bin/dep
        mode: 0755
      become: yes
  always:
    - name: cleanup...
      file:
        path: /tmp/dep-linux-amd64
        state: absent

- name: Creates directories
  file: path={{ item }} state=directory
  with_items:
    - "~/.tmux/plugins/"

- name: Synchronize and delete files in dest.
  synchronize:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    copy_links: yes
    delete: yes
    recursive: yes
  loop:
    - { src: "{{lookup('env', 'HOME')}}/.config/nvim", dest: "~/.config/" }
    - { src: "~/.oh-my-zsh/", dest: "~/.oh-my-zsh/" }
    - { src: "~/.zshrc", dest: "~/.zshrc" }
    - { src: "~/.aws/", dest: "~/.aws/" }
    - { src: "~/.kube/", dest: "~/.kube/" }
    - { src: "~/.gcp/", dest: "~/.gcp/" }
    - { src: "~/.gitconfig", dest: "~/.gitconfig" }
    - { src: "~/.tmux.conf", dest: "~/.tmux.conf" }
    - { src: "~/.tmux.conf.local", dest: "~/.tmux.conf.local" }
    - { src: "~/.tmux/plugins/tmux-resurrect/resurrect.tmux", dest: "~/.tmux/plugins/tmux-resurrect/resurrect.tmux" }

- name: nvim configuration
  block:
  - name: use nvim for vi
    alternatives: name=vi path=/usr/bin/nvim
  - name: use nvim for vim
    alternatives: name=vim path=/usr/bin/nvim
  - name: use nvim for editor
    alternatives: name=editor path=/usr/bin/nvim
  become: yes

- name: nvim symlink
  file:
    src: ~/.config/nvim/vps.vim
    dest: ~/.custom.vim
    state: link

- stat:
    path: "{{lookup('env', 'MAC_PATH')}}"
  register: home_path

- stat:
    path: "/usr/local/bin/python3"
  register: python_path

- name: create home symlink
  shell: ln -s ~/ "{{lookup('env', 'MAC_PATH')}}"
  when: home_path.stat.exists == False

- name: create python3 symlink
  shell: ln -s /usr/bin/python3 /usr/local/bin/
  when: python_path.stat.exists == False
  become: yes

- include: external.yml

- name: configure dnsmasq
  copy:
    dest: "/etc/dnsmasq.d/all"
    content: "server=/#/8.8.8.8\n
server=/internal.honestbee.com/100.64.0.10\n
server=/internal.sumopay.com/100.64.0.10"
  notify: "Restart dnsmasq"
  become: yes

- name: configure systemd-resolve
  blockinfile:
    dest: /etc/systemd/resolved.conf
    content: "DNSStubListener=no\nDNS=127.0.0.1"
  notify: "Restart systemd-resolved"
  become: yes

- include: tools.yml
