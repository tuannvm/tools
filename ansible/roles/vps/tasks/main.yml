---


- include: ssh.yml

- name: add neovim ppa
  apt_repository:
    repo: ppa:neovim-ppa/stable

- name: Install os dependancies
  apt:
    name: "{{ apt_packages }}"
    update_cache: yes
    state: latest
    autoremove: yes
    autoclean: yes
  become: yes

- name: Install pip packages
  pip:
    name: "{{ pip_packages }}"
    state: latest

- stat:
    path: "~/.cache/dein/"
  register: dein_path

- name: Download dein installer script
  get_url:
    url: https://raw.githubusercontent.com/Shougo/dein.vim/master/bin/installer.sh
    dest: installer.sh
    mode: 0755
  when: dein_path.stat.exists == False 
    
- shell: bash ~/installer.sh ~/.cache/dein
  when: dein_path.stat.exists == False 

- block:
  - name: use nvim for vi
    alternatives: name=vi path=/usr/bin/nvim
  - name: use nvim for vim
    alternatives: name=vim path=/usr/bin/nvim
  - name: use nvim for editor
    alternatives: name=editor path=/usr/bin/nvim
  become: yes

- name: install kubectl
  get_url:
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version }}/bin/linux/amd64/kubectl
    dest: /usr/local/bin/
    mode: 0755
  become: yes

- name: install helm
  block:
    - name: download helm
      get_url:
        url: https://storage.googleapis.com/kubernetes-helm/{{ helm_tgz }}
        dest: /tmp/
    - name: unarchive
      unarchive:
        copy: no
        src: /tmp/{{helm_tgz}}
        dest: /tmp
    - name: copy to bin
      copy:
        remote_src: yes
        src: /tmp/linux-amd64/helm
        dest: /usr/local/bin
        mode: 0755
      become: yes
  always:
    - name: cleanup...
      file:
        path: /tmp/linux-amd64
        state: absent

- name: Synchronize and delete files in dest.
  synchronize:
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
    copy_links: yes
    delete: yes
    recursive: yes
  loop:
    - { src: "{{lookup('env', 'HOME')}}/.config/nvim", dest: "~/.config/" }
    - { src: "~/.oh-my-zsh/", dest: "~/.oh-my-zsh/" }
    - { src: "~/.zshrc", dest: "~/.zshrc" }
    - { src: "~/Downloads/tuannvm.hp.ovpn", dest: "~/hb.ovpn" }

- stat:
    path: "{{lookup('env', 'MAC_PATH')}}"
  register: home_path

- stat:
    path: "/usr/local/bin/python3"
  register: python_path

- name: create home symlink
  shell: ln -s ~/ "{{lookup('env', 'MAC_PATH')}}"
  when: home_path.stat.exists == False 
    
- name: create python3 symlink
  shell: ln -s /usr/bin/python3 /usr/local/bin/
  when: python_path.stat.exists == False 
  become: yes
  
- include: external.yml
