# Default values for keel.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
environment: staging
image:
  repository: keelhq/keel
  tag: 0.10.0
  pullPolicy: IfNotPresent

# Enable insecure registries
insecureRegistry: false

# Polling is enabled by default,
# you can disable it setting value below to false
polling:
  enabled: true

# Helm provider support
helmProvider:
  enabled: false
  tillerAddress: "tiller-deploy.kube-system.svc.cluster.local:44134"

# Notification level (debug, info, success, warn, error, fatal)
notificationLevel: info

# Webhook Notification
# Remote webhook endpoint for notification delivery
webhook:
  enabled: false
  endpoint: ""

# Keel service
# Enable to receive webhooks from Docker registries
service:
  enabled: false
  type: LoadBalancer
  externalPort: 9300
  clusterIP: ""

# Webhook Relay service
# If you donâ€™t want to expose your Keel service, you can use https://webhookrelay.com/
# which can deliver webhooks to your internal Keel service through Keel sidecar container.
webhookRelay:
  enabled: false
  bucket: ""
  # webhookrelay.com credentials
  # Set the key and secret values here to create the keel-webhookrelay secret with this
  # chart -or- leave key and secret blank and create the keel-webhookrelay secret separately.
  key: ""
  secret: ""
  # webhookrelay docker image
  image:
    repository: webhookrelay/webhookrelayd
    tag: latest
    pullPolicy: IfNotPresent

# Keel self-update
# uncomment lines below if you want Keel to automaticly
# self-update to the latest release version
keel:
  # keel policy (all/major/minor/patch/force)
  policy: all
  # trigger type, defaults to events such as pubsub, webhooks
  trigger: poll
  # polling schedule
  pollSchedule: "@every 1m"
  # images to track and update
  images:
   - repository: image.repository
     tag: image.tag

# RBAC manifests management
rbac:
  enabled: true

# Resources
resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

# NodeSelector
nodeSelector: {}

affinity: {}

tolerations: {}

# Enable DEBUG logging
debug: true

podAnnotations: {}

aws:
  region: null

podDisruptionBudget:
  enabled: true
  maxUnavailable: 1
  minAvailable: null
